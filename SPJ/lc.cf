entrypoints Program ;

token InfixToken (('-' | '+' | '/' | '=' | '*' | '<' | '>' | '|' | '&' )+) ;
token Identifier (letter (letter | digit | '_' )*) ;

comment "#" ;

Prog.				Program ::= [Stm] ;

terminator Stm ";" ;
Equality.			Stm ::= Identifier "=" Exp ;

PExp.               Exp5 ::= "(" Exp ")" ;
ConstantStringTerm. Exp5 ::= String ;
ConstantIntTerm.    Exp5 ::= Integer ;
VariableTerm.       Exp5 ::= Identifier ;
ApplicationTerm.    Exp4 ::= Exp Exp5 ;
AbstractionTerm.    Exp1 ::= "lambda" Identifier "." Exp ;
LetTerm.            Exp1 ::= "let" Identifier "=" Exp "in" Exp ;
LetrecTerm.         Exp1 ::= "letrec" Identifier "=" Exp "in" Exp ;
ConditionalTerm.    Exp2 ::= "if" Exp3 "then" Exp "else" Exp ;
InfixTerm.          Exp3 ::= Exp InfixToken Exp ;

coercions Exp 5 ;
