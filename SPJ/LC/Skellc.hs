module SPJ.LC.Skellc where

-- Haskell module generated by the BNF converter

import SPJ.LC.Abslc
import SPJ.LC.ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transProgram :: Program -> Result
transProgram x = case x of
  Prog stms  -> failure x


transStm :: Stm -> Result
transStm x = case x of
  Equality id exp  -> failure x


transExp :: Exp -> Result
transExp x = case x of
  PExp exp  -> failure x
  ConstantStringTerm str  -> failure x
  ConstantIntTerm n  -> failure x
  VariableTerm id  -> failure x
  ApplicationTerm exp0 exp  -> failure x
  AbstractionTerm id exp  -> failure x



