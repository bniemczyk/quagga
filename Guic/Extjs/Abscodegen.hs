module Guic.Extjs.Abscodegen where

-- Haskell module generated by the BNF converter

newtype Ident = Ident String deriving (Eq,Ord,Show)
data WidgetType =
   Button
  deriving (Eq,Ord,Show)

data Parameter =
   Param Object
  deriving (Eq,Ord,Show)

data Numb =
   NumbDouble Integer Integer
 | NumbInteger Integer
  deriving (Eq,Ord,Show)

data DKey =
   DictKeyIdent Ident
 | DictKeyString String
  deriving (Eq,Ord,Show)

data DValue =
   DictValue Object
  deriving (Eq,Ord,Show)

data DItem =
   DictItem DKey DValue
  deriving (Eq,Ord,Show)

data Dictionary =
   Dict [DItem]
  deriving (Eq,Ord,Show)

data Array =
   Arr [Object]
  deriving (Eq,Ord,Show)

data Object =
   ObjIdent Ident
 | ObjString String
 | ObjNumb Numb
 | ObjDictionary Dictionary
 | ObjArray Array
  deriving (Eq,Ord,Show)

data WidgetParams =
   WParams [Parameter] Dictionary
 | WNoParams Dictionary
  deriving (Eq,Ord,Show)

data Widget =
   NewWidget WidgetType WidgetParams
  deriving (Eq,Ord,Show)

