import Quagga.LC.Runtime


fact =



trip =



hundred =
  (((((trip


sqr =
  (((_S) (((_S) ((_K) (*))) (_I))) (_I))


zero =
  (_I)


one =
  (((_S) (_I)) ((_K) (1)))


two =
  (((_S) (((_S) (_I)) ((_K) (1)))) ((_K) (2)))


three =
  (((_S) (((_S) (((_S) (_I)) ((_K) (1)))) ((_K) (2)))) ((_K) (3)))


nil =
  (_I)


cons =
  (((_S) (((_S) ((_K) (_S))) (((_S) (((_S) ((_K) (_S))) (((_S) ((_K) (_K))) ((_K) (_S))))) (((_S) (((_S) ((_K) (_S))) (((_S) (((_S) ((_K) (_S))) (((_S) ((_K) (_K))) ((_K) (_S))))) (((_S) ((_K) (_K))) ((_K) (_I)))))) (((_S) (((_S) ((_K) (_S))) (((_S) ((_K) (_K))) ((_K) (_K))))) (((_S) ((_K) (_K))) (_I))))))) (((_S) (((_S) ((_K) (_S))) (((_S) ((_K) (_K))) ((_K) (_K))))) ((_K) (_I))))


head =
  (((_S) (_I)) (((_S) (((_S) ((_K) (_S))) (((_S) ((_K) (_K))) ((_K) (_K))))) ((_K) (_I))))


tail =
  (((_S) (_I)) (((_S) ((_K) (_K))) ((_K) (_I))))


closure =
  (((_S) ((_K) (_K))) (_I))


closure2 =
  (((_S) (((_S) ((_K) (_S))) (((_S) ((_K) (_K))) ((_K) (_K))))) (((_S) ((_K) (_K))) (_I)))


twenty_five =
  ((((_S) (_I)) ((_K) (5))) (((_S) (((_S) ((_K) (*))) (_I))) (_I)))


main =
  (((+) ((fact) ((sqr) (2)))) (hundred))
